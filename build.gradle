/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.example.composable.buildsrc.Libs
import com.example.composable.buildsrc.Versions

buildscript {
    ext{
        kotlin_version = '1.5.31'
        compose_version = '1.1.0-alpha06'
        coroutines_version = '1.5.2'
        accompanist_version = '0.19.0'
        // CH-API-CLIENT
        version_ch_api_client = "1.4.4"
        // Navigation
        version_navigation = '2.3.5'
        // AppCenter
        version_appcenter = '4.3.1'
        // AppComapt
        version_appcompat = '1.3.1'
        // Legacy support
        version_legacy = "1.0.0"
        // Timber
        version_timber = '5.0.1'

        // Encrypt token
        version_preferences = "1.3.0"
        version_auzre_communications = '1.2.1-beta.1'
        // Azure Communication Services
        version_acs = '1.2.1-beta.1'
        // Azure NotificationHubs
        version_notificationhubs = '1.1.6'
        // Navigation
        version_navigation = '2.3.5'
        // Constraint layout
        version_constraint_layout = '2.1.1'

        // ViewPager2
        version_viewpager2 = "1.0.0"
        // Cardview
        version_cardview = "1.0.0"
        version_glide = "4.8.0"
        version_skeleton = "1.1.1"
        version_google_signin = '19.2.0'
        version_map= '17.0.1'
        // Youtube Player Library
        version_youtube = "10.0.5"
        //html parser
        version_jsoup = '1.14.3'
        //stripe payment
        version_stripe = '18.1.0'

        version_simple_dialog = 'v3.3.2'
        version_sendbird_uikit = '2.1.8'
        version_swiperefresh = '1.1.0'
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$version_navigation"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.android.tools.build:gradle:7.0.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // Google Services plugin

    }
}

plugins {
    id 'com.diffplug.spotless' version '5.15.0'
}

subprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://repo.sendbird.com/public/maven" }

        if (!Libs.AndroidX.Compose.snapshot.isEmpty()) {
            maven { url "https://androidx.dev/snapshots/builds/${Libs.AndroidX.Compose.snapshot}/artifacts/repository/" }
        }
        if (Libs.Accompanist.version.endsWith("SNAPSHOT")) {
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors (disabled by default)
            allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

            // Set JVM target to 1.8
            jvmTarget = "11"
        }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(Versions.ktlint).userData([android: "true"])
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }
}
